{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Leandro Miranda\\\\Downloads\\\\PRO_1-4_C103_TemplateDoProjeto-main\\\\PRO_1-4_C103_TemplateDoProjeto-main\\\\node_modules\\\\react-native-elements\\\\dist\\\\tooltip\\\\Tooltip.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Fragment } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { withTheme } from \"../config\";\nimport { ScreenWidth, ScreenHeight, isIOS } from \"../helpers\";\nimport Triangle from \"./Triangle\";\nimport getTooltipCoordinate, { getElementVisibleWidth } from \"./getTooltipCoordinate\";\nvar defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: function onClose() {},\n  onOpen: function onOpen() {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false\n};\nvar Tooltip = function (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n  var _super = _createSuper(Tooltip);\n  function Tooltip() {\n    var _this;\n    _classCallCheck(this, Tooltip);\n    _this = _super.apply(this, arguments);\n    _this._isMounted = false;\n    _this.state = {\n      isVisible: false,\n      yOffset: 0,\n      xOffset: 0,\n      elementWidth: 0,\n      elementHeight: 0\n    };\n    _this.toggleTooltip = function () {\n      var onClose = _this.props.onClose;\n      _this.getElementPosition();\n      _this._isMounted && _this.setState(function (prevState) {\n        if (prevState.isVisible) {\n          onClose && onClose();\n        }\n        return {\n          isVisible: !prevState.isVisible\n        };\n      });\n    };\n    _this.wrapWithPress = function (toggleOnPress, toggleAction, children) {\n      if (toggleOnPress) {\n        return React.createElement(TouchableOpacity, _extends({}, _defineProperty({}, toggleAction, _this.toggleTooltip), {\n          delayLongPress: 250,\n          activeOpacity: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        }), children);\n      }\n      return children;\n    };\n    _this.containerStyle = function (withOverlay, overlayColor) {\n      return {\n        backgroundColor: withOverlay ? overlayColor : 'transparent',\n        flex: 1\n      };\n    };\n    _this.getTooltipStyle = function () {\n      var _ref2;\n      var _this$state = _this.state,\n        yOffset = _this$state.yOffset,\n        xOffset = _this$state.xOffset,\n        elementHeight = _this$state.elementHeight,\n        elementWidth = _this$state.elementWidth;\n      var _this$props = _this.props,\n        height = _this$props.height,\n        backgroundColor = _this$props.backgroundColor,\n        width = _this$props.width,\n        withPointer = _this$props.withPointer,\n        containerStyle = _this$props.containerStyle;\n      var _getTooltipCoordinate = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer),\n        x = _getTooltipCoordinate.x,\n        y = _getTooltipCoordinate.y;\n      return StyleSheet.flatten([(_ref2 = {\n        position: 'absolute'\n      }, _defineProperty(_ref2, I18nManager.isRTL ? 'right' : 'left', x), _defineProperty(_ref2, \"top\", y), _defineProperty(_ref2, \"width\", width), _defineProperty(_ref2, \"height\", height), _defineProperty(_ref2, \"backgroundColor\", backgroundColor), _defineProperty(_ref2, \"display\", 'flex'), _defineProperty(_ref2, \"alignItems\", 'center'), _defineProperty(_ref2, \"justifyContent\", 'center'), _defineProperty(_ref2, \"flex\", 1), _defineProperty(_ref2, \"borderRadius\", 10), _defineProperty(_ref2, \"padding\", 10), _ref2), containerStyle]);\n    };\n    _this.renderPointer = function (tooltipY) {\n      var _this$state2 = _this.state,\n        yOffset = _this$state2.yOffset,\n        xOffset = _this$state2.xOffset,\n        elementHeight = _this$state2.elementHeight,\n        elementWidth = _this$state2.elementWidth;\n      var _this$props2 = _this.props,\n        backgroundColor = _this$props2.backgroundColor,\n        pointerColor = _this$props2.pointerColor;\n      var pastMiddleLine = yOffset > (tooltipY || 0);\n      return React.createElement(View, {\n        style: _defineProperty({\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2\n        }, I18nManager.isRTL ? 'right' : 'left', xOffset + getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 - 7.5),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, React.createElement(Triangle, {\n        style: {\n          borderBottomColor: pointerColor || backgroundColor\n        },\n        isDown: pastMiddleLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }));\n    };\n    _this.getTooltipHighlightedButtonStyle = function () {\n      var _ref4;\n      var highlightColor = _this.props.highlightColor;\n      var _this$state3 = _this.state,\n        yOffset = _this$state3.yOffset,\n        xOffset = _this$state3.xOffset,\n        elementWidth = _this$state3.elementWidth,\n        elementHeight = _this$state3.elementHeight;\n      return _ref4 = {\n        position: 'absolute',\n        top: yOffset\n      }, _defineProperty(_ref4, I18nManager.isRTL ? 'right' : 'left', xOffset), _defineProperty(_ref4, \"backgroundColor\", highlightColor), _defineProperty(_ref4, \"overflow\", 'visible'), _defineProperty(_ref4, \"width\", elementWidth), _defineProperty(_ref4, \"height\", elementHeight), _ref4;\n    };\n    _this.renderTouchableHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return React.createElement(TouchableOpacity, {\n        testID: \"tooltipTouchableHighlightedButton\",\n        onPress: function onPress() {\n          return _this.toggleTooltip();\n        },\n        style: TooltipHighlightedButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, _this.props.children);\n    };\n    _this.renderStaticHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return React.createElement(View, {\n        style: TooltipHighlightedButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, _this.props.children);\n    };\n    _this.renderHighlightedButton = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderTouchableHighlightedButton();\n      } else {\n        return _this.renderStaticHighlightedButton();\n      }\n    };\n    _this.renderContent = function (withTooltip) {\n      var _this$props3 = _this.props,\n        popover = _this$props3.popover,\n        withPointer = _this$props3.withPointer,\n        toggleOnPress = _this$props3.toggleOnPress,\n        toggleAction = _this$props3.toggleAction;\n      if (!withTooltip) {\n        return _this.wrapWithPress(toggleOnPress, toggleAction, _this.props.children);\n      }\n      var tooltipStyle = _this.getTooltipStyle();\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, _this.renderHighlightedButton(), withPointer && _this.renderPointer(tooltipStyle.top), React.createElement(View, {\n        style: tooltipStyle,\n        testID: \"tooltipPopoverContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, popover));\n    };\n    _this.getElementPosition = function () {\n      var skipAndroidStatusBar = _this.props.skipAndroidStatusBar;\n      _this.renderedElement && _this.renderedElement.measure(function (_frameOffsetX, _frameOffsetY, width, height, pageOffsetX, pageOffsetY) {\n        _this._isMounted && _this.setState({\n          xOffset: pageOffsetX,\n          yOffset: isIOS || skipAndroidStatusBar ? pageOffsetY : pageOffsetY - Platform.select({\n            android: StatusBar.currentHeight,\n            ios: 20,\n            default: 0\n          }),\n          elementWidth: width,\n          elementHeight: height\n        });\n      });\n    };\n    _this.renderStaticModalContent = function () {\n      var _this$props4 = _this.props,\n        withOverlay = _this$props4.withOverlay,\n        overlayColor = _this$props4.overlayColor;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: _this.containerStyle(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, _this.renderContent(true)));\n    };\n    _this.renderTogglingModalContent = function () {\n      var _this$props5 = _this.props,\n        withOverlay = _this$props5.withOverlay,\n        overlayColor = _this$props5.overlayColor;\n      return React.createElement(TouchableOpacity, {\n        style: _this.containerStyle(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, _this.renderContent(true));\n    };\n    _this.renderModalContent = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderStaticModalContent();\n      } else {\n        return _this.renderTogglingModalContent();\n      }\n    };\n    return _this;\n  }\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      requestAnimationFrame(this.getElementPosition);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isVisible = this.state.isVisible;\n      var _this$props6 = this.props,\n        onOpen = _this$props6.onOpen,\n        ModalComponent = _this$props6.ModalComponent;\n      return React.createElement(View, {\n        collapsable: false,\n        ref: function ref(e) {\n          _this2.renderedElement = e;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, this.renderContent(false), React.createElement(ModalComponent, {\n        animationType: \"fade\",\n        visible: isVisible,\n        transparent: true,\n        onShow: onOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      }, this.renderModalContent()));\n    }\n  }]);\n  return Tooltip;\n}(React.Component);\nTooltip.defaultProps = defaultProps;\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');","map":{"version":3,"names":["React","Fragment","TouchableOpacity","Modal","View","StatusBar","I18nManager","StyleSheet","Platform","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","defaultProps","withOverlay","overlayColor","highlightColor","withPointer","toggleOnPress","toggleAction","height","width","containerStyle","backgroundColor","onClose","onOpen","skipAndroidStatusBar","ModalComponent","closeOnlyOnBackdropPress","Tooltip","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","_isMounted","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","props","getElementPosition","setState","prevState","wrapWithPress","children","createElement","_extends","_defineProperty","delayLongPress","activeOpacity","__source","fileName","_jsxFileName","lineNumber","columnNumber","flex","getTooltipStyle","_ref2","_this$state","_this$props","_getTooltipCoordinate","x","y","flatten","position","isRTL","renderPointer","tooltipY","_this$state2","_this$props2","pointerColor","pastMiddleLine","style","top","borderBottomColor","isDown","getTooltipHighlightedButtonStyle","_ref4","_this$state3","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","testID","onPress","renderStaticHighlightedButton","renderHighlightedButton","renderContent","withTooltip","_this$props3","popover","tooltipStyle","renderedElement","measure","_frameOffsetX","_frameOffsetY","pageOffsetX","pageOffsetY","select","android","currentHeight","ios","default","renderStaticModalContent","_this$props4","renderTogglingModalContent","_this$props5","renderModalContent","_createClass","key","value","componentDidMount","requestAnimationFrame","componentWillUnmount","render","_this2","_this$props6","collapsable","ref","e","__self","animationType","visible","transparent","onShow","Component"],"sources":["C:/Users/Leandro Miranda/Downloads/PRO_1-4_C103_TemplateDoProjeto-main/PRO_1-4_C103_TemplateDoProjeto-main/node_modules/react-native-elements/dist/tooltip/Tooltip.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { TouchableOpacity, Modal, View, StatusBar, I18nManager, StyleSheet, Platform, } from 'react-native';\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, { getElementVisibleWidth, } from './getTooltipCoordinate';\nconst defaultProps = {\n    withOverlay: true,\n    overlayColor: 'rgba(250, 250, 250, 0.70)',\n    highlightColor: 'transparent',\n    withPointer: true,\n    toggleOnPress: true,\n    toggleAction: 'onPress',\n    height: 40,\n    width: 150,\n    containerStyle: {},\n    backgroundColor: '#617080',\n    onClose: () => { },\n    onOpen: () => { },\n    skipAndroidStatusBar: false,\n    ModalComponent: Modal,\n    closeOnlyOnBackdropPress: false,\n};\nclass Tooltip extends React.Component {\n    constructor() {\n        super(...arguments);\n        this._isMounted = false;\n        this.state = {\n            isVisible: false,\n            yOffset: 0,\n            xOffset: 0,\n            elementWidth: 0,\n            elementHeight: 0,\n        };\n        this.toggleTooltip = () => {\n            const { onClose } = this.props;\n            this.getElementPosition();\n            this._isMounted &&\n                this.setState((prevState) => {\n                    if (prevState.isVisible) {\n                        onClose && onClose();\n                    }\n                    return { isVisible: !prevState.isVisible };\n                });\n        };\n        this.wrapWithPress = (toggleOnPress, toggleAction, children) => {\n            if (toggleOnPress) {\n                return (<TouchableOpacity {...{ [toggleAction]: this.toggleTooltip }} delayLongPress={250} activeOpacity={1}>\n          {children}\n        </TouchableOpacity>);\n            }\n            return children;\n        };\n        this.containerStyle = (withOverlay, overlayColor) => {\n            return {\n                backgroundColor: withOverlay ? overlayColor : 'transparent',\n                flex: 1,\n            };\n        };\n        this.getTooltipStyle = () => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { height, backgroundColor, width, withPointer, containerStyle, } = this.props;\n            const { x, y } = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer);\n            return StyleSheet.flatten([\n                {\n                    position: 'absolute',\n                    [I18nManager.isRTL ? 'right' : 'left']: x,\n                    top: y,\n                    width,\n                    height,\n                    backgroundColor,\n                    // default styles\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flex: 1,\n                    borderRadius: 10,\n                    padding: 10,\n                },\n                containerStyle,\n            ]);\n        };\n        this.renderPointer = (tooltipY) => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { backgroundColor, pointerColor } = this.props;\n            const pastMiddleLine = yOffset > (tooltipY || 0);\n            return (<View style={{\n                position: 'absolute',\n                top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n                [I18nManager.isRTL ? 'right' : 'left']: xOffset +\n                    getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n                    7.5,\n            }}>\n        <Triangle style={{ borderBottomColor: pointerColor || backgroundColor }} isDown={pastMiddleLine}/>\n      </View>);\n        };\n        this.getTooltipHighlightedButtonStyle = () => {\n            const { highlightColor } = this.props;\n            const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n            return {\n                position: 'absolute',\n                top: yOffset,\n                [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n                backgroundColor: highlightColor,\n                overflow: 'visible',\n                width: elementWidth,\n                height: elementHeight,\n            };\n        };\n        this.renderTouchableHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<TouchableOpacity testID=\"tooltipTouchableHighlightedButton\" onPress={() => this.toggleTooltip()} style={TooltipHighlightedButtonStyle}>\n        {this.props.children}\n      </TouchableOpacity>);\n        };\n        this.renderStaticHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>);\n        };\n        this.renderHighlightedButton = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderTouchableHighlightedButton();\n            }\n            else {\n                return this.renderStaticHighlightedButton();\n            }\n        };\n        this.renderContent = (withTooltip) => {\n            const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n            if (!withTooltip) {\n                return this.wrapWithPress(toggleOnPress, toggleAction, this.props.children);\n            }\n            const tooltipStyle = this.getTooltipStyle();\n            return (<View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>);\n        };\n        this.getElementPosition = () => {\n            const { skipAndroidStatusBar } = this.props;\n            this.renderedElement &&\n                this.renderedElement.measure((_frameOffsetX, _frameOffsetY, width, height, pageOffsetX, pageOffsetY) => {\n                    this._isMounted &&\n                        this.setState({\n                            xOffset: pageOffsetX,\n                            yOffset: isIOS || skipAndroidStatusBar\n                                ? pageOffsetY\n                                : pageOffsetY -\n                                    Platform.select({\n                                        android: StatusBar.currentHeight,\n                                        ios: 20,\n                                        default: 0,\n                                    }),\n                            elementWidth: width,\n                            elementHeight: height,\n                        });\n                });\n        };\n        this.renderStaticModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<Fragment>\n        <TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}/>\n        <View>{this.renderContent(true)}</View>\n      </Fragment>);\n        };\n        this.renderTogglingModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}>\n        {this.renderContent(true)}\n      </TouchableOpacity>);\n        };\n        this.renderModalContent = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderStaticModalContent();\n            }\n            else {\n                return this.renderTogglingModalContent();\n            }\n        };\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        // wait to compute onLayout values.\n        requestAnimationFrame(this.getElementPosition);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    render() {\n        const { isVisible } = this.state;\n        const { onOpen, ModalComponent } = this.props;\n        return (<View collapsable={false} ref={(e) => {\n            this.renderedElement = e;\n        }}>\n        {this.renderContent(false)}\n        <ModalComponent animationType=\"fade\" visible={isVisible} transparent onShow={onOpen}>\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>);\n    }\n}\nTooltip.defaultProps = defaultProps;\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}